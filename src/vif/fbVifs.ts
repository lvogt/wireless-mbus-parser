import { applyNumberDefault, divide, multiply } from "@/helper/vifHelper";
import type { VIFDescriptor } from "@/types";

export const fbVifs: VIFDescriptor[] = [
  {
    vif: 0x00,
    legacyName: "VIF_ENERGY_WATT",
    unit: "Wh",
    description: "Energy",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x00,
    legacyName: "VIF_ENERGY_MWH",
    unit: "MWh",
    description: "Energy",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x01,
    legacyName: "VIF_ENERGY_MWH",
    unit: "MWh",
    description: "Energy",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x02 - 0x07
  {
    vif: 0x08,
    legacyName: "VIF_ENERGY_GJ",
    unit: "GJ",
    description: "Energy",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x09,
    legacyName: "VIF_ENERGY_GJ",
    unit: "GJ",
    description: "Energy",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x0a - 0x0f
  {
    vif: 0x10,
    legacyName: "VIF_VOLUME_CM",
    unit: "m³",
    description: "Volume",
    calc: (val) => multiply(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x11,
    legacyName: "VIF_VOLUME_CM",
    unit: "m³",
    description: "Volume",
    calc: (val) => multiply(val, 1000),
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x12 - 0x17
  {
    vif: 0x18,
    legacyName: "VIF_MASS_T",
    unit: "t",
    description: "Mass",
    calc: (val) => multiply(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x19,
    legacyName: "VIF_MASS_T",
    unit: "t",
    description: "Mass",
    calc: (val) => multiply(val, 1000),
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x1a - 0x20
  {
    vif: 0x21,
    legacyName: "VIF_VOLUME_CFEET",
    unit: "ft³",
    description: "Volume",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x22,
    legacyName: "VIF_VOLUME_GALLON",
    unit: "gal",
    description: "Volume",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x23,
    legacyName: "VIF_VOLUME_GALLON_L",
    unit: "gal",
    description: "Volume",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x24,
    legacyName: "VIF_VOLUME_FLOW_GALLON_L",
    unit: "gal/min",
    description: "Volume flow",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x25,
    legacyName: "VIF_VOLUME_FLOW_GALLON",
    unit: "gal/min",
    description: "Volume flow",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x26,
    legacyName: "VIF_VOLUME_FLOW_GALLON_H",
    unit: "gal/h",
    description: "Volume flow",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x27
  {
    vif: 0x28,
    legacyName: "VIF_POWER_MW",
    unit: "MW",
    description: "Power",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x29,
    legacyName: "VIF_POWER_MW",
    unit: "MW",
    description: "Power",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x2a - 0x2f
  {
    vif: 0x30,
    legacyName: "VIF_POWER_GJH",
    unit: "GJ/h",
    description: "Power",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x31,
    legacyName: "VIF_POWER_GJH",
    unit: "GJ/h",
    description: "Power",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x32 - 0x57
  {
    vif: 0x58,
    legacyName: "VIF_TEMPERATURE_FLOW_F",
    unit: "°F",
    description: "Flow Temperature",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x59,
    legacyName: "VIF_TEMPERATURE_FLOW_F",
    unit: "°F",
    description: "Flow Temperature",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x5a,
    legacyName: "VIF_TEMPERATURE_FLOW_F",
    unit: "°F",
    description: "Flow Temperature",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x5b,
    legacyName: "VIF_TEMPERATURE_FLOW_F",
    unit: "°F",
    description: "Flow Temperature",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x5c,
    legacyName: "VIF_TEMPERATURE_RETURN_F",
    unit: "°F",
    description: "Return Temperature",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x5d,
    legacyName: "VIF_TEMPERATURE_RETURN_F",
    unit: "°F",
    description: "Return Temperature",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x5e,
    legacyName: "VIF_TEMPERATURE_RETURN_F",
    unit: "°F",
    description: "Return Temperature",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x5f,
    legacyName: "VIF_TEMPERATURE_RETURN_F",
    unit: "°F",
    description: "Return Temperature",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x60,
    legacyName: "VIF_TEMPERATURE_DIFF_F",
    unit: "°F",
    description: "Temperature Difference",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x61,
    legacyName: "VIF_TEMPERATURE_DIFF_F",
    unit: "°F",
    description: "Temperature Difference",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x62,
    legacyName: "VIF_TEMPERATURE_DIFF_F",
    unit: "°F",
    description: "Temperature Difference",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x63,
    legacyName: "VIF_TEMPERATURE_DIFF_F",
    unit: "°F",
    description: "Temperature Difference",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x64,
    legacyName: "VIF_TEMPERATURE_EXT_F",
    unit: "°F",
    description: "External Temperature",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x65,
    legacyName: "VIF_TEMPERATURE_EXT_F",
    unit: "°F",
    description: "External Temperature",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x66,
    legacyName: "VIF_TEMPERATURE_EXT_F",
    unit: "°F",
    description: "External Temperature",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x67,
    legacyName: "VIF_TEMPERATURE_EXT_F",
    unit: "°F",
    description: "External Temperature",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  //Reserved primary VIF 0x68 - 0x6f
  {
    vif: 0x70,
    legacyName: "VIF_COLD_WARM_LIMIT_F",
    unit: "°F",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x71,
    legacyName: "VIF_COLD_WARM_LIMIT_F",
    unit: "°F",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x72,
    legacyName: "VIF_COLD_WARM_LIMIT_F",
    unit: "°F",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x73,
    legacyName: "VIF_COLD_WARM_LIMIT_F",
    unit: "°F",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x74,
    legacyName: "VIF_COLD_WARM_LIMIT_C",
    unit: "°C",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x75,
    legacyName: "VIF_COLD_WARM_LIMIT_C",
    unit: "°C",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x76,
    legacyName: "VIF_COLD_WARM_LIMIT_C",
    unit: "°C",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x77,
    legacyName: "VIF_COLD_WARM_LIMIT_C",
    unit: "°C",
    description: "Cold / Warm Temperature Limit",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x78,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => divide(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x79,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => divide(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x7a,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => divide(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x7b,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => val,
    apply: applyNumberDefault,
  },
  {
    vif: 0x7c,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => multiply(val, 10),
    apply: applyNumberDefault,
  },
  {
    vif: 0x7d,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => multiply(val, 100),
    apply: applyNumberDefault,
  },
  {
    vif: 0x7e,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => multiply(val, 1000),
    apply: applyNumberDefault,
  },
  {
    vif: 0x7f,
    legacyName: "VIF_CUMUL_COUNT_MAX_POWER",
    unit: "W",
    description: "cumul. count max power",
    calc: (val) => multiply(val, 10000),
    apply: applyNumberDefault,
  },
];
